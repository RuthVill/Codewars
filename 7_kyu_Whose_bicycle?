/* Instruction 

I am the father of three wonderful sons. before the beginning of the school year, I promised them that I would buy a bicycle for someone who would bring the best marks at the end of the school year. it's time to keep promises and I count on you.

You have 3 input objects(school diaries) with school subjects and marks (1-10). For example:

{
  'algebra': 6,
  'history': 8,
  'physics': 9,
  'geography': 2,
  'chemistry': 9
}
Return please :

'I need to buy a bicycle for my first son.' // the sum of the marks is the highest  in the first diary.

'I need to buy a bicycle for my second son.' // the sum of the marks is the highest in the second diary.

'I need to buy a bicycle for my third son.' //  the sum of the marks is the highest in the third diary.
If two or three sons have the same highest marks, you need to choose the younger one. Use the age table which is constant and preloaded:

const ageTable = {
                  'firstSonAge': 14,
                  'secondSonAge': 9,
                  'thirdSonAge': 8
                }

*/

// Solution 

function whoseBicycle(diary1, diary2, diary3) {
    const ageTable = {
        'firstSonAge': 14,
        'secondSonAge': 9,
        'thirdSonAge': 8
    }

    //return an array of keys and array of values of ageTable
    var arr = Object.keys(ageTable);
    var value = Object.values(ageTable);


    //get an array of the values of each object and then will 
    // return the sum of each object, 
    var result = [];
    let number = 0;
    for (let eachObject of arguments) {
        let array = Object.values(eachObject).reduce((sum, currentValue) => (sum + currentValue));
        // will push the three values in one array
        result.push(array)
    }

    // check max number of the returnedarray and check if the max number is repeated
    var maximun = Math.max.apply(Math, result);
    let count = 0;
    let indexes = [];
    result.map((array, index) => {
        if (array === maximun) {
            indexes.push(index);
            count++;
        }
    })
    indexes;
    //console.log(indexes)


    //in case indexes has more than one max number
    // who i give the bicycle to? 
    if (indexes.length > 1) {
        let total = [];
        var cheky = indexes.map(function(element) {
            var checkValu = value.map(function(array, index) {
                //console.log(array)
                if (element === index) {
                    //if the element of the indexes (for example [1,2]) have the same index as values of ageTable, it will return an array of the values of ageTable
                    // total will containe the value of ageTable
                    total.push(array);
                }
            })
        })
        //give the bicycle to the youngest, by 
        //calculating the minimum value of the array total
        let minimum = Math.min(...total);
        for (var key in ageTable) {
            if (minimum === ageTable[key]) {
                if (key === ('firstSonAge')) {
                    return "I need to buy a bicycle for my first son."
                } else if (key === ('secondSonAge')) {
                    return "I need to buy a bicycle for my second son."
                } else if (key === 'thirdSonAge') {
                    return "I need to buy a bicycle for my third son."
                }
            }
        }

    } else { //when indexes have just one index
        for (let i = 0; i < indexes.length; i++) {
            if ((indexes[i]) === (arr.indexOf('firstSonAge'))) {
                return "I need to buy a bicycle for my first son."
            } else if ((indexes[i]) === (arr.indexOf('secondSonAge'))) {
                return "I need to buy a bicycle for my second son."
            } else if ((indexes[i]) === (arr.indexOf('thirdSonAge'))) {
                return "I need to buy a bicycle for my third son."
            }
        }


    }
}
